{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UpdatePlace","UserPlaces","Auth","require","config","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.aa87ad86.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => { },\r\n  logout: () => { }\r\n})","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid)\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem('userData', JSON.stringify({ userId: uid, token: token, expiration: tokenExpirationDate.toISOString() }))\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem('userData')\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime)\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate])\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login])\r\n\r\n  return { token, login, logout, userId };\r\n}","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n  return <header className=\"main-header\">\r\n    {props.children}\r\n  </header>\r\n}\r\n\r\nexport default MainHeader;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context'\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return <ul className=\"nav-links\">\r\n    <li>\r\n      <NavLink to=\"/\" exact>ALL USERS</NavLink>\r\n    </li>\r\n    {auth.isLoggedIn &&\r\n      <li>\r\n        <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n      </li>}\r\n    {auth.isLoggedIn &&\r\n      <li>\r\n        <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n      </li>\r\n    }\r\n    {!auth.isLoggedIn && <li>\r\n      <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n    </li>\r\n    }\r\n    {auth.isLoggedIn &&\r\n      <li>\r\n        <button onClick={auth.logout}>LOGOUT</button>\r\n      </li>}\r\n  </ul>\r\n}\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css'\r\n\r\nconst SideDrawer = props => {\r\n  const content = <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n    <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n  </CSSTransition>\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'))\r\n}\r\n\r\nexport default SideDrawer;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MainHeader from './MainHeader'\r\nimport NavLinks from './NavLinks'\r\nimport SideDrawer from './SideDrawer'\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\n\r\nconst MainNavigation = props => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  }\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default MainNavigation;","import React, { Suspense } from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\n// import Users from './user/pages/Users';\r\n// import NewPlace from './places/pages/NewPlace';\r\n// import UserPlaces from './places/pages/UserPlaces';\r\n// import UpdatePlace from './places/pages/UpdatePlace';\r\n// import Auth from './user/pages/Auth';\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport { AuthContext } from './shared/context/auth-context';\r\nimport { useAuth } from './shared/hooks/auth-hook';\r\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\r\n\r\nconst Users = React.lazy(() => import('./user/pages/Users'))\r\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'))\r\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'))\r\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'))\r\nconst Auth = React.lazy(() => import('./user/pages/Auth'))\r\n\r\nrequire('dotenv').config();\r\n\r\n\r\n\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n      (\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Users />\r\n          </Route>\r\n          <Route path=\"/:userId/places\" exact>\r\n            <UserPlaces />\r\n          </Route>\r\n          <Route path=\"/places/new\" exact>\r\n            <NewPlace />\r\n          </Route>\r\n          <Route path=\"/places/:placeId\">\r\n            <UpdatePlace />\r\n          </Route>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      )\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn: !!token, token: token, userId: userId, login: login, logout: logout }}>\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>\r\n          <Suspense fallback={\r\n            <div className=\"center\">\r\n              <LoadingSpinner />\r\n            </div>}>\r\n            {routes}\r\n          </Suspense>\r\n        </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}